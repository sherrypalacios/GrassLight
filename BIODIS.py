                                                                         
SUBROUTINE BIODIS(MAXHT,DENSTY,CURVEL,AREASH,NLAYER,BETA,LATHIK)
#	*************************************************************************
# Biodiversity Ver. 2.15
#		Calculates the fractional biomass distribution, leaf area index (LAI)
#		and horizontally projected leaf area (LAP) for up to 100
#		evenly-spaced canopy layers.  Adjusts for canopy bending as a result
# 	of current flow.
#
#		Usage: CALL BIODIS(MAXHT,DENSTY,CURVEL,AREASH,NLAYER,BETA,LATHIK,ASYMP,INFLEC,SHAPE)
#
#	Definitions of passed variables:
# ----------------------------------------------------
#		MAXHT  - Height of the seagrass canopy (mm), required to compute vertical
#   				 biomass distribution (relative).
# 	DENSTY - Seagrass shoot density (shoots/m2), required to determine leaf
#     			 area index and projected leaf area.
# 	CURVEL - Free-stream current velocity (cm/s) used to determine bending
#   			   angle and projected leaf area.
#		AREASH - Leaf area (m2/shoot) of individual shoots, required to determine
#     			 leaf area index and projected leaf area.
#		NLAYER - Number of evenly-spaced layers in the canopy (max = 100).
#		BETA   - Bending angle (radians) of canopy in flow.
#		LATHIK - Thickness of evenly spaced canopy layers, defined here
#    			   as 10 mm.
#		ASYMP  - Asymptotic percentage of canopy biomass in the lowest (ground) layer
#		INFLEC - Inflection point (mm above bottom) in the plant canopy
#		SHAPE  - Dimensionless shape parameter
#
#		COMMOM variables are array variables shared with other subroutines and the main program.
#
#	Definitions of common variables:
# ----------------------------------------------------
#		BIOMAS(I) - Relative biomass present in canopy layer (I).  All
#     				  biomass elemenct should sum to 1.  Calculated in subroutine BIODIS.
# 	LAI(I)    - Leaf area index (m2 leaf/m2 area) in each canopy layer (I).
#			        	Determined in subroutine BIODIS.
#		LAP(I)    - Leaf area projected toward the zenith.  Calculated as a
#       				function of bending angle in subroutine BIODIS. 
#		WAVLED(J) - Wavelength of spectral element j, determined in 
#     					subroutine EDCALC from irradiance inupt file.
#		PIZ(I)    - Spectral production coefficient Pi(z) calculated in
#         			subroutine EDCALC.
#		EO(I)     - Scalar irradiance (Ed + Eu) in canopy layer I calculated in
#       				subroutine EDCALC.
#        
# Files required by BIODIS as inputs:
# ----------------------------------------------------
#     CANHTZ.TXT created by GL to pass data on canopy ht and water depth among subroutines
#
# Files generated by BIODIS:
# ----------------------------------------------------
#     None
#
# CHECK PAST FILE FOR UPDATE NOTES
#	******************************************************************************

	IMPLICIT REAL*8 (A-Z)
	INTEGER I,J,K,L,M,N,NLAYER,REMAIN,NULAYER,ITER,DONE,FINL
	CHARACTER ANS,RUN
	CHARACTER*64 COPYRITE,VER
      COMMON /MASS/ASYMP,INFLEC,SHAPE,BETA0,BIOMAS(100)
     1	/AREA/LAI(100)
     2    /PROJEC/LAP(100)
     3	/WAVE/WAVLED(100)
     4    /PROD/PIZ(100),ALPHA(100)
     5    /IRR/EO(100)
     6    /CONVRG/ITER,DONE,FINL,RUN
      INCLUDE 'CommonE0.f'    !for use with OWQINIT
	INCLUDE 'CommonKd.f'    !for use with OWQINIT
	DATA COPYRITE/'Copyright (c) 2013 by Richard C. Zimmerman'/
	DATA VER/'2.15'/
c      WRITE(*,10)VER
c10	FORMAT(' Subroutine BioDis Ver. ',A64)
C     *** STUPID WORK-AROUND TO READ CANOPY HT AND TOTAL Z***
c             STILL HAVING PROBLEMS WITH 'COMMON'  RCZ 5 JUL 12
      OPEN(UNIT=2,FILE='CANHTZ.TXT')
      READ(2,20)CANOPYHT
      READ(2,20)TOTALZ
20    FORMAT(F10.3)
      CLOSE(UNIT=2)
c      WRITE(*,21)CANOPYHT,TOTALZ !debugging stmts
c21    FORMAT('Canopy Ht =',g10.3,' TOTALZ =',g10.3)
C     *** END STUPID WORK-AROUND      
C
C				***  INITIALIZE SIGMOID EQUATION PARAMETERS ***
C
	PI=3.141592654
	LATHIK=10.0 !layer thickness in mm
	BETAN=PI*BETA0/180. !convert degress to radians
	IF(CURVEL.LE.5.)BETA=BETAN
	IF(CURVEL.GT.5.)BETA=BETAN+(PI/2)*(1-EXP(-0.036*(CURVEL-5.)))
C	Beta = bending angle(RAD), CURVEL = current velocity (m/s)
	REALHT=MAXHT*COS(BETA)
c      write(*,30)realht,maxht,beta
c30    format('realht = ',f10.3,' max = ',f10.3,' beta = ',f10.3)
	IF(ASYMP.EQ.0.	.OR.	INFLEC.EQ.0.	.OR.
     1	SHAPE.EQ.0. .OR.    AREASH.EQ.0.)THEN
		SHAPE=4.746816
		ASYMP=550.*MAXHT**(-0.79124)
C	try 0.79124 instead of 0.78 to get more accurate biomass distribution/rcz/3 jun 04
		INFLEC=600.*(1-EXP(-0.0011*MAXHT))
          AREASH=0.00068752*EXP(0.0054703*MAXHT)
	ENDIF
C
C			*** INITIALIZE ARRAYS AND ACCUMULATORS ***
C
	DO 100 I=1,100
		BIOMAS(I)=0.
		LAI(I)=0.
		LAP(I)=0.
		WAVLED(I)=0.
100	CONTINUE
	SUMLAI=0.
	HT=0.
      SUMBIO=0.
	SUMLAP=0.
C
C			*** DETERMINE NUMBER OF CANOPY LAYERS ***
C
	NLAYER=INT(MAXHT/LATHIK)    !get the number of layers
	REMAIN=MOD(INT(MAXHT),INT(LATHIK))  !get the remainder
	IF(REMAIN.NE.0)NLAYER=NLAYER+1  !inc NLAYER by 1 if remainder positive
	IF(NLAYER.LE.100)GO TO 120
		WRITE(*,110)
110		FORMAT(' Too many layers; reduce canopy ht')
		GO TO 500

C
C			***  COMPUTE BIOMASS DISTRIBUTION ***
C
120	LAITOT=AREASH*DENSTY
	IF(DENSTY.EQ.0.)GO TO 500
	DO 200 I=1,NLAYER
		HT=HT+LATHIK
		BIOMAS(I)=(ASYMP/(1.0+(HT/INFLEC)**SHAPE))/100.
c          write(*,150)i,biomas(i)
c150       format('Layer ',i4,'biomas =',f10.3)
c          pause
200   CONTINUE
C
C             *** ADJUST BIOMAS FOR BENDING ANGLE EFFECTS ***
C                     ON CANOPY HEIGHT
C
      HT=0.
      DO 210 I=1,NLAYER
          HT=HT+LATHIK
c          write(*,130)ht,lathik,realht
c130       format('ht ='f10.3,' layer thick =',f10.3,'real ht=',f10.3)  
          IF(REALHT.GE.HT)THEN
              BIOMAS(I)=BIOMAS(I)/(REALHT/MAXHT)
          ELSE
              BIOMAS(I)=0.
          END IF
          SUMBIO=SUMBIO+BIOMAS(I)
c          write(*,150)i,biomas(i),sumbio
c150       format('Layer ',i4,' biomas = ',f10.3,' total =',f10.3)
c          pause
210   CONTINUE
C
C         *** CORRECT BIOMASS FOR INTEGRATION ERRORS ***
C
      HT=0.
      DO 220 I=1,NLAYER
          HT=HT+LATHIK
          BIOMAS(I)=BIOMAS(I)/SUMBIO
220   CONTINUE
C      
C         *** ACCUMULATE BIOMASS PARAMETERS
C
      SUMBIO=0.
      NULAYER=0
      DO 230 I=1,NLAYER
          LAI(I)=BIOMAS(I)*LAITOT
          LAP(I)=LAI(I)*SIN(BETA)
          SUMBIO=SUMBIO+BIOMAS(I)
          SUMLAI=SUMLAI+LAI(I)
          SUMLAP=SUMLAP+LAP(I)
          IF(BIOMAS(I).GT.0.)THEN
              NULAYER=NULAYER+1
          END IF
230   CONTINUE
      NLAYER=NULAYER          !fewer layers because of bending        
C
C             *** IF CANOPY IS TALLER THAN WATER COLUMN ***
C                COMPRESS ALL LAYERS INTO TOPMOST LAYER
C                 AND ASSUME LEAVES ARE HORIZONTAL, i.e., LAI=LAP
C
c      write(*,250)totalz
c250   format('in BIODIS, totalz=',f10.3)
      DEPTH=TOTALZ*1000. !convert totalz to depth in mm
c      write(*,255)TOTALZ,DEPTH,REALHT  !debugging stmts
c255   format(' In Biodis, TOTALZ =',g10.3,' m; DEPTH=',G10.3,
c     1      ' CANOPY HT ='G10.3)      
      IF(REALHT  .GT.    DEPTH)THEN !if canopy taller than water column
          NULAYER=INT(DEPTH/LATHIK)    !reduce # layers accordingly
	    REMAIN=MOD(INT(DEPTH),INT(LATHIK))  !get the remainder
	    IF(REMAIN.NE.0)NULAYER=NULAYER+1  !inc NULAYR if REMAIN > 0
          IF(ITER.EQ.1)THEN
              WRITE(*,300)NLAYER,NULAYER
300           FORMAT('ORIGINALLY ',I4,' LAYERS; NOW',I4)
          END IF
          DO 310 I=NULAYER+1,NLAYER    !and sum biomass into NULAYER
              BIOMAS(NULAYER)=BIOMAS(NULAYER)+BIOMAS(I) !accumulate mass
              BIOMAS(I)=0 !biomass in all upper layers = 0
              LAI(I)=0    !lai in all upper layers = 0
              LAP(I)=0    !lap in all upper layers = 0
310       CONTINUE
          LAI(NULAYER)=BIOMAS(NULAYER)*LAITOT   !biomass to LAI
          LAP(NULAYER)=LAI(NULAYER) !assume leaves are horizontal
          NLAYER=NULAYER  !finally update # of layers
      END IF
500	RETURN
	END
